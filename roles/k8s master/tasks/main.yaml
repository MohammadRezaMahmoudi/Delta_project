---

# - name: Check if kubeadm has already run
#   stat:
#     path: "/etc/kubernetes/pki/ca.key"
#   register: kubeadm_ca

# - name: Init cluster if needed
#   include_tasks: init.yml
#   when: not kubeadm_ca.stat.exists
#   run_once: yes

# - name: Enable and check kubelet service
#   systemd:
#     name: kubelet
#     daemon_reload: yes
#     state: started
#     enabled: yes
#   register: started_kubelet

# - name: "Copy config file"
#   fetch:
#     src: /etc/kubernetes/admin.conf 
#     dest: "{{ lookup('env', 'HOME') }}/admin.conf"
#     flat: yes
#   run_once: yes
#   ignore_errors: yes

#Initialize the Kubernetes cluster with kubeadm
  - name: Initialize the Kubernetes cluster using kubeadm
    command: 'kubeadm init --apiserver-advertise-address="192.168.56.10" --pod-network-cidr="192.168.0.0/16"'
    # command: 'kubeadm init --apiserver-advertise-address="192.168.56.10" --apiserver-cert-extra-sans="192.168.50.10"  --node-name k8s-master --pod-network-cidr="192.168.0.0/16"'


#Setup the kube config file
  - name: Setup kubeconfig for user
    command: "{{ item }}"
    with_items:
     - mkdir -p ~/.kube
     - cp -i /etc/kubernetes/admin.conf ~/.kube/config
    
#Setup the container networking provider and the network policy engine
  - name: Install calico pod network
    become: false
    command: kubectl create -f https://docs.projectcalico.org/v3.4/getting-started/kubernetes/installation/hosted/calico.yaml

#Generate kube join command for joining the node to the Kubernetes cluster and store the command in the file named join-command
  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Copy join command to local file
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

